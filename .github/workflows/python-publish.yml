name: Upload Python Package

on:
  release:
    types: [published]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  bump-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install bump2version
        run: pip install bump2version

      - name: Configure Git Identity for bump2version
        run: |
          git config --local user.email "truebelief2010@gmail.com"
          git config --local user.name "GitHub Actions

      - name: Bump patch version
        run: bump2version patch

      - name: (Optional) Additional Commit (if needed)
        run: |
          git add .
          git commit -m "Bump version" || echo "No changes to commit"
          git push origin HEAD:main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
  build-sdist:
    needs: bump-version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Build source distribution
        run: python -m build --sdist

      - name: Upload source distribution artifact
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz
  build-wheels:
    # This matrix job runs on all three platforms.
    needs: bump-version
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        # os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install cibuildwheel
        run: pip install cibuildwheel
    
      - name: Build wheels with cibuildwheel
        run: cibuildwheel --output-dir wheelhouse .
        env:
          CIBW_BUILD: cp36-* cp37-* cp38-* cp39-* cp310-* cp311-* cp312-* cp313-*
          # CIBW_BUILD: cp311-*
          CIBW_SKIP: "*pypy* *-musllinux*"

      - name: Upload wheels artifact
        uses: actions/upload-artifact@v4
        with:
          # The artifact name includes the runner OS.
          name: wheels-${{ matrix.os }}
          path: wheelhouse/*
  
  pypi-publish:
    runs-on: ubuntu-latest
    needs: [build-wheels, build-sdist]
    permissions:
      # Required for secure publishing
      id-token: write
    # Dedicated environments with protections for publishing are strongly recommended.
    # For more information, see: https://docs.github.com/en/actions/deployment/targeting-different-environments/using-environments-for-deployment#deployment-protection-rules
    environment:
      name: pypi
      # OPTIONAL: uncomment and update to include your PyPI project URL in the deployment status:
      # url: https://pypi.org/p/YOURPROJECT
      #
      # ALTERNATIVE: if your GitHub Release name is the PyPI project version string
      # ALTERNATIVE: exactly, uncomment the following line instead:
      url: https://pypi.org/project/cut_pursuit_py/${{ github.event.release.name }}
    steps:
      # Download wheels built on Ubuntu
      - name: Download Ubuntu wheels
        uses: actions/download-artifact@v4
        with:
          name: wheels-ubuntu-latest
          path: dist/
      - name: Download macOS wheels
        uses: actions/download-artifact@v4
        with:
          name: wheels-macos-latest
          path: dist/
          
      - name: Download Windows wheels
        uses: actions/download-artifact@v4
        with:
          name: wheels-windows-latest
          path: dist/
          
      # Download source distribution
      - name: Download source distribution
        uses: actions/download-artifact@v4
        with:
          name: sdist
          path: dist/
          
      - name: Publish wheels to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
