name: Upload Python Package

on:
  release:
    types: [published]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  bump-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: true
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install bump2version
        run: pip install bump2version

      - name: Configure Git Identity
        run: |
          git config --local user.email "truebelief2010@gmail.com"
          git config --local user.name "GitHub Actions"

      - name: Bump patch version
        run: bump2version patch

      - name: Push changes to main
        run: git push origin HEAD:main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      # Extract version directly from .bumpversion.cfg with a more robust approach
      - name: Get version
        id: get_version
        run: |
          cat .bumpversion.cfg
          VERSION=$(cat .bumpversion.cfg | grep current_version | sed 's/current_version = //')
          echo "Extracted version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
    outputs:
      version: ${{ steps.get_version.outputs.version }}
          
  build-sdist:
    needs: bump-version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout latest code
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Pull latest changes
        run: git pull origin main

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Build source distribution
        run: python -m build --sdist
        env:
          VERSION_OVERRIDE: ${{ needs.bump-version.outputs.version }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz

  build-wheels:
    needs: bump-version
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout latest code
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Pull latest changes
        run: git pull origin main

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install cibuildwheel
        run: pip install cibuildwheel
    
      - name: Build wheels with cibuildwheel
        run: cibuildwheel --output-dir wheelhouse .
        env:
          CIBW_BUILD: cp36-* cp37-* cp38-* cp39-* cp310-* cp311-* cp312-* cp313-*
          CIBW_SKIP: "*pypy* *-musllinux*"
          VERSION_OVERRIDE: ${{ needs.bump-version.outputs.version }}

      - name: Upload wheels artifact
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: wheelhouse/*
  
  pypi-publish:
    runs-on: ubuntu-latest
    needs: [build-wheels, build-sdist, bump-version]
    permissions:
      id-token: write
    environment:
      name: pypi
      url: https://pypi.org/project/cut_pursuit_py/${{ needs.bump-version.outputs.version }}
    steps:
      - name: Download Ubuntu wheels
        uses: actions/download-artifact@v4
        with:
          name: wheels-ubuntu-latest
          path: dist/
          
      - name: Download macOS wheels
        uses: actions/download-artifact@v4
        with:
          name: wheels-macos-latest
          path: dist/
          
      - name: Download Windows wheels
        uses: actions/download-artifact@v4
        with:
          name: wheels-windows-latest
          path: dist/
          
      - name: Download source distribution
        uses: actions/download-artifact@v4
        with:
          name: sdist
          path: dist/
          
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
